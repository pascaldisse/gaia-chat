C„ÄàchatInput„ÄâchatInput:‚ü®{
  props:‚ü®
    onSendMessage:null,
    isLoading:false,
    onCancel:null,
    onToggleSearch:null,
    personas:[]
  ‚ü©,
  state:‚ü®
    inputValue:"",
    showSuggestions:false,
    filteredSuggestions:[],
    mentionStartIndex:null,
    selectedSuggestionIndex:0,
    webSearchEnabled:false
  ‚ü©,
  style:‚ü®
    container:‚ü®
      display:flex,
      flexDirection:column,
      borderTop:1px solid #e6e6e6,
      padding:10px,
      backgroundColor:white
    ‚ü©,
    inputRow:‚ü®
      display:flex,
      alignItems:center
    ‚ü©,
    textarea:‚ü®
      flex:1,
      padding:12px,
      borderRadius:20px,
      border:1px solid #e6e6e6,
      resize:none,
      fontSize:14px,
      minHeight:24px,
      maxHeight:150px,
      outline:none,
      focus:‚ü®borderColor:#0084ff‚ü©
    ‚ü©,
    button:‚ü®
      padding:8px 16px,
      backgroundColor:#0084ff,
      color:white,
      border:none,
      borderRadius:20px,
      marginLeft:10px,
      cursor:pointer,
      disabled:‚ü®
        opacity:0.6, 
        cursor:not-allowed
      ‚ü©
    ‚ü©,
    cancelButton:‚ü®
      padding:8px 16px,
      backgroundColor:#ff3b30,
      color:white,
      border:none,
      borderRadius:20px,
      marginLeft:10px,
      cursor:pointer
    ‚ü©,
    suggestions:‚ü®
      position:absolute,
      bottom:70px,
      left:10px,
      right:10px,
      backgroundColor:white,
      borderRadius:8px,
      boxShadow:0 2px 10px rgba(0,0,0,0.1),
      maxHeight:200px,
      overflowY:auto,
      zIndex:1000
    ‚ü©,
    suggestionItem:‚ü®
      display:flex,
      alignItems:center,
      padding:8px 12px,
      cursor:pointer,
      hover:‚ü®backgroundColor:#f5f5f5‚ü©
    ‚ü©,
    selectedItem:‚ü®
      backgroundColor:#f0f7ff
    ‚ü©,
    avatar:‚ü®
      width:24px,
      height:24px,
      borderRadius:50%,
      marginRight:8px
    ‚ü©,
    personaName:‚ü®
      fontWeight:bold
    ‚ü©,
    personaType:‚ü®
      fontSize:12px,
      color:#666666,
      marginLeft:8px
    ‚ü©,
    tools:‚ü®
      display:flex,
      marginBottom:8px
    ‚ü©,
    searchToggle:‚ü®
      backgroundColor:transparent,
      border:none,
      borderRadius:50%,
      width:30px,
      height:30px,
      display:flex,
      alignItems:center,
      justifyContent:center,
      cursor:pointer,
      marginRight:8px,
      hover:‚ü®backgroundColor:#f5f5f5‚ü©
    ‚ü©,
    searchToggleActive:‚ü®
      backgroundColor:#e6f2ff,
      color:#0084ff
    ‚ü©
  ‚ü©,
  render:‚ü®
    –ü class:"chat-input"‚Üí[
      (–ü class:"tools"‚Üí[
        (‚åò""‚åòclick‚ÜítoggleSearch class:(webSearchEnabled|"search-toggle active"|"search-toggle")‚Üí‚åë"üîç")
      ]),
      (showSuggestions|–ü class:"suggestions"‚Üí
        filteredSuggestions.map(suggestion, index‚ü®
          –ü class:(index === selectedSuggestionIndex|"suggestion-item selected"|"suggestion-item") @click‚Üí()=>selectSuggestion(suggestion)‚Üí[
            (‚åπ src:(suggestion.image || "/default-avatar.png") class:"avatar"),
            (–ü class:"persona-name"‚Üí‚åë"${suggestion.name}"),
            (–ü class:"persona-type"‚Üí‚åë"Persona")
          ]
        ‚ü©)
      ),
      (–ü class:"input-row"‚Üí[
        (‚å§"textarea" 
          placeholder:(webSearchEnabled|"Type your message... Web search enabled üîç"|"Type your message...") 
          ‚áÑinputValue 
          @input‚ÜíhandleInput 
          @keydown‚ÜíhandleKeyDown 
          disabled:isLoading
        ),
        (‚åò"Send"‚åòclick‚ÜíhandleSubmit isDisabled:isLoading),
        (isLoading|‚åò"Cancel"‚åòclick‚ÜíhandleCancel class:"cancel-button")
      ])
    ]
  ‚ü©,
  methods:‚ü®
    handleInput:(e)‚ü®
      inputValue‚äúe.target.value
      
      const cursorPos = e.target.selectionStart
      const value = e.target.value
      const substring = value.substring(0, cursorPos)
      const atIndex = substring.lastIndexOf('@')
      
      if (atIndex === -1) {
        showSuggestions‚äúfalse
        mentionStartIndex‚äúnull
        return
      }
      
      mentionStartIndex‚äúatIndex
      const mentionQuery = substring.substring(atIndex + 1)
      
      // Use personas from props, or fallback to default list
      const availablePersonas = personas.length > 0 ? personas : [
        {id:"1", name:"Gaia", image:"/assets/personas/gaia-default.jpeg"},
        {id:"2", name:"Sage", image:"/default-avatar.png"},
        {id:"3", name:"Guru", image:"/default-avatar.png"}
      ]
      
      const personaMatches = availablePersonas.filter(p => 
        p.name.toLowerCase().startsWith(mentionQuery.toLowerCase())
      )
      
      filteredSuggestions‚äúpersonaMatches
      showSuggestions‚äúpersonaMatches.length > 0
      selectedSuggestionIndex‚äú0
    ‚ü©,
    handleKeyDown:(e)‚ü®
      if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault()
        handleSubmit()
      } else if (showSuggestions) {
        if (e.key === 'ArrowDown') {
          e.preventDefault()
          selectedSuggestionIndex‚äú(selectedSuggestionIndex + 1) % filteredSuggestions.length
        } else if (e.key === 'ArrowUp') {
          e.preventDefault()
          selectedSuggestionIndex‚äú(selectedSuggestionIndex - 1 + filteredSuggestions.length) % filteredSuggestions.length
        } else if (e.key === 'Enter') {
          e.preventDefault()
          selectSuggestion(filteredSuggestions[selectedSuggestionIndex])
        } else if (e.key === 'Escape') {
          showSuggestions‚äúfalse
        }
      }
    ‚ü©,
    selectSuggestion:(suggestion)‚ü®
      if (mentionStartIndex === null) return
      
      const before = inputValue.substring(0, mentionStartIndex)
      const after = inputValue.substring(document.querySelector('textarea').selectionStart)
      
      inputValue‚äú`${before}@${suggestion.name} ${after}`.trim()
      showSuggestions‚äúfalse
    ‚ü©,
    handleSubmit:()‚ü®
      if (!inputValue.trim()) return
      
      if (onSendMessage) {
        onSendMessage(inputValue)
      }
      
      inputValue‚äú""
      showSuggestions‚äúfalse
    ‚ü©,
    handleCancel:()‚ü®
      if (onCancel) {
        onCancel()
      }
    ‚ü©,
    toggleSearch:()‚ü®
      webSearchEnabled‚äú!webSearchEnabled
      
      if (onToggleSearch) {
        onToggleSearch(webSearchEnabled)
      }
    ‚ü©
  ‚ü©
}‚ü©